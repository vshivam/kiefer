{"ast":null,"code":"var _jsxFileName = \"/home/shivam/code/kiefer/src/components/assignment_details..js\";\nimport React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { Message, Menu, Image, Table, Tab, Icon, Divider, Form, TextArea, Header, Popup, Button, Container, Card, Comment, Segment, Grid } from \"semantic-ui-react\";\n\nclass AssignmentDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      submissionSuccessful: false,\n      submissions: [{\n        text: \"yoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyo\"\n      }],\n      alreadySubmitted: true\n    };\n\n    this.componentDidMount = () => {\n      this.getAllSubmissions();\n    };\n\n    this.getSubmissions = () => {};\n\n    this.onCreateSubmission = () => {\n      this.getNewSubmissionRequest(this.props.location.assignment.mongoid, this.state.submission_text).then(result => {\n        if (result.data.success) {\n          console.log(result.data);\n          this.setState({\n            submissionSuccessful: true\n          });\n        }\n      });\n    };\n\n    this.onFormChange = (e, {\n      name,\n      value\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.getNewSubmissionRequest = (assignment_id, text) => {\n      return Axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:8000\" + \"/user/submit\",\n        params: {\n          assignment_id: assignment_id,\n          text: text\n        },\n        withCredentials: true\n      });\n    };\n\n    this.getAllPostsRequest = () => {\n      return Axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000\" + \"/user/get_post\",\n        params: {\n          assignment_id: this.props.location.assignment.mongoid\n        },\n        withCredentials: true\n      });\n    };\n\n    this.getAllSubmissions = () => {\n      this.getAllPostsRequest().then(result => {\n        if (result.data.success) {\n          console.log(result.data.posts);\n          this.setState({\n            submissions: result.data.posts,\n            alreadySubmitted: result.data.submitted\n          });\n        }\n      });\n    };\n\n    this.renderVoteMenu = submission => {\n      return React.createElement(Menu, {\n        compact: true,\n        icon: true,\n        borderless: true,\n        floated: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        onClick: () => this.vote(\"amazing_story\", submission.mongoid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), submission.amazing_story), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        onClick: () => this.vote(\"well_written\", submission.mongoid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), submission.well_written), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        onClick: () => this.vote(\"hilarious\", submission.mongoid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), submission.hilarious));\n    };\n\n    this.renderComments = comments => {\n      this.comments.map(comment => {\n        this.renderComment(comment);\n      });\n    };\n\n    this.renderFriendSubmission = submission => {\n      return React.createElement(Segment, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        padded: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Kiwi writes\")), React.createElement(Grid.Column, {\n        width: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, this.renderVoteMenu(submission))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, submission.text)), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Comment.Group, {\n        minimal: true,\n        size: \"mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.renderComments(submission.comments))))));\n    };\n\n    this.renderFriendSubmissions = submissions => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \" Checkout your classmates' submissions\"), submissions.map(s => {\n        return this.renderFriendSubmission(s);\n      }));\n    };\n\n    this.renderSubmissionForm = () => {\n      return this.state.submissionSuccessful || this.state.alreadySubmitted ? React.createElement(Message, {\n        success: true,\n        compact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Message.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Well done on finishing this assignment!\", \" \"), \"Now check out posts from your friends and see what else you can learn.\") : React.createElement(Form, {\n        onSubmit: this.onCreateSubmission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, this.props.location.assignment.header), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Give it your best shot!\"), React.createElement(TextArea, {\n        name: \"submission_text\",\n        onChange: this.onFormChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, \"Don't forget to include these words for extra points ;)\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.props.location.assignment.keyword.join(\", \"))), React.createElement(Form.Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \" Submit\"));\n    };\n\n    this.vote = (type, post_id) => {\n      this.getVoteRequest(type, post_id).then(result => {\n        if (result.data.success) {\n          this.getAllSubmissions();\n        }\n      });\n    };\n\n    this.getVoteRequest = (type, post_id) => {\n      let params = {};\n      params[type] = true;\n      params[post_id] = post_id;\n      return Axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000\" + \"/user/reaction\",\n        params: params,\n        withCredentials: true\n      });\n    };\n\n    this.render = () => {\n      console.log(this.props.location);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, this.renderSubmissionForm(), this.renderFriendSubmissions(this.state.submissions));\n    };\n  }\n\n  renderComment(comment) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      dividing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"How did Kiwi do ?\"), React.createElement(Comment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Comment.Avatar, {\n      src: \"https://react.semantic-ui.com/images/avatar/small/matt.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(Comment.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Comment.Author, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Matt\"), React.createElement(Comment.Metadata, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Today at 5:42PM\")), React.createElement(Comment.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"How artistic!\"), React.createElement(Comment.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Comment.Action, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Reply\")))), React.createElement(Form, {\n      reply: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Form.TextArea, {\n      placeholder: \"Encourage Kiwi! Some grammar tips, perhaps ?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(Button, {\n      content: \"Add Reply\",\n      labelPosition: \"left\",\n      icon: \"edit\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })));\n  }\n\n}\n\nAssignmentDetails = withRouter(AssignmentDetails);\nexport default AssignmentDetails;","map":{"version":3,"sources":["/home/shivam/code/kiefer/src/components/assignment_details..js"],"names":["React","Fragment","Axios","BrowserRouter","Router","Route","Link","withRouter","Message","Menu","Image","Table","Tab","Icon","Divider","Form","TextArea","Header","Popup","Button","Container","Card","Comment","Segment","Grid","AssignmentDetails","Component","state","submissionSuccessful","submissions","text","alreadySubmitted","componentDidMount","getAllSubmissions","getSubmissions","onCreateSubmission","getNewSubmissionRequest","props","location","assignment","mongoid","submission_text","then","result","data","success","console","log","setState","onFormChange","e","name","value","assignment_id","method","url","params","withCredentials","getAllPostsRequest","posts","submitted","renderVoteMenu","submission","vote","amazing_story","well_written","hilarious","renderComments","comments","map","comment","renderComment","renderFriendSubmission","renderFriendSubmissions","s","renderSubmissionForm","header","keyword","join","type","post_id","getVoteRequest","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\nimport {\n  Message,\n  Menu,\n  Image,\n  Table,\n  Tab,\n  Icon,\n  Divider,\n  Form,\n  TextArea,\n  Header,\n  Popup,\n  Button,\n  Container,\n  Card,\n  Comment,\n  Segment,\n  Grid\n} from \"semantic-ui-react\";\n\nclass AssignmentDetails extends React.Component {\n  state = {\n    submissionSuccessful: false,\n    submissions: [\n      {\n        text:\n          \"yoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyo\"\n      }\n    ],\n    alreadySubmitted: true\n  };\n\n  componentDidMount = () => {\n    this.getAllSubmissions();\n  };\n\n  getSubmissions = () => {};\n\n  onCreateSubmission = () => {\n    this.getNewSubmissionRequest(\n      this.props.location.assignment.mongoid,\n      this.state.submission_text\n    ).then(result => {\n      if (result.data.success) {\n        console.log(result.data);\n        this.setState({ submissionSuccessful: true });\n      }\n    });\n  };\n\n  onFormChange = (e, { name, value }) => this.setState({ [name]: value });\n\n  getNewSubmissionRequest = (assignment_id, text) => {\n    return Axios({\n      method: \"post\",\n      url: \"http://127.0.0.1:8000\" + \"/user/submit\",\n      params: {\n        assignment_id: assignment_id,\n        text: text\n      },\n      withCredentials: true\n    });\n  };\n\n  getAllPostsRequest = () => {\n    return Axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000\" + \"/user/get_post\",\n      params: {\n        assignment_id: this.props.location.assignment.mongoid\n      },\n      withCredentials: true\n    });\n  };\n\n  getAllSubmissions = () => {\n    this.getAllPostsRequest().then(result => {\n      if (result.data.success) {\n        console.log(result.data.posts);\n        this.setState({\n          submissions: result.data.posts,\n          alreadySubmitted: result.data.submitted\n        });\n      }\n    });\n  };\n\n  renderVoteMenu = submission => {\n    return (\n      <Menu compact icon borderless floated=\"right\">\n        <Menu.Item>\n          <Icon\n            name=\"star outline\"\n            color=\"yellow\"\n            size=\"large\"\n            onClick={() => this.vote(\"amazing_story\", submission.mongoid)}\n          />\n          {submission.amazing_story}\n        </Menu.Item>\n        <Menu.Item>\n          <Icon\n            name=\"handshake outline\"\n            color=\"blue\"\n            size=\"large\"\n            onClick={() => this.vote(\"well_written\", submission.mongoid)}\n          />\n          {submission.well_written}\n        </Menu.Item>\n        <Menu.Item>\n          <Icon\n            name=\"hand peace outline\"\n            color=\"purple\"\n            size=\"large\"\n            onClick={() => this.vote(\"hilarious\", submission.mongoid)}\n          />\n          {submission.hilarious}\n        </Menu.Item>\n      </Menu>\n    );\n  };\n\n  renderComment(comment) {\n    return (\n      <Fragment>\n        <Header as=\"h3\" dividing>\n          How did Kiwi do ?\n        </Header>\n        <Comment>\n          <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n          <Comment.Content>\n            <Comment.Author as=\"a\">Matt</Comment.Author>\n            <Comment.Metadata>\n              <div>Today at 5:42PM</div>\n            </Comment.Metadata>\n            <Comment.Text>How artistic!</Comment.Text>\n            <Comment.Actions>\n              <Comment.Action>Reply</Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n        <Form reply>\n          <Form.TextArea placeholder=\"Encourage Kiwi! Some grammar tips, perhaps ?\" />\n          <Button\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n            primary\n          />\n        </Form>\n      </Fragment>\n    );\n  }\n\n  renderComments = comments => {\n    this.comments.map(comment => {\n      this.renderComment(comment);\n    });\n  };\n\n  renderFriendSubmission = submission => {\n    return (\n      <Segment color=\"teal\">\n        <Grid padded relaxed>\n          <Grid.Row>\n            <Grid.Column width=\"12\">\n              <Header>Kiwi writes</Header>\n            </Grid.Column>\n            <Grid.Column width=\"4\">\n              {this.renderVoteMenu(submission)}\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>{submission.text}</Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Comment.Group minimal size=\"mini\">\n                {this.renderComments(submission.comments)}\n              </Comment.Group>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  };\n\n  renderFriendSubmissions = submissions => {\n    return (\n      <Fragment>\n        <Header> Checkout your classmates' submissions</Header>\n        {submissions.map(s => {\n          return this.renderFriendSubmission(s);\n        })}\n      </Fragment>\n    );\n  };\n\n  renderSubmissionForm = () => {\n    return this.state.submissionSuccessful || this.state.alreadySubmitted ? (\n      <Message success compact>\n        <Message.Header>\n          Well done on finishing this assignment!{\" \"}\n        </Message.Header>\n        Now check out posts from your friends and see what else you can learn.\n      </Message>\n    ) : (\n      <Form onSubmit={this.onCreateSubmission}>\n        <Header>{this.props.location.assignment.header}</Header>\n        <Form.Field>\n          <label>Give it your best shot!</label>\n          <TextArea name=\"submission_text\" onChange={this.onFormChange} />\n        </Form.Field>\n        <Message>\n          Don't forget to include these words for extra points ;)\n          <b>{this.props.location.assignment.keyword.join(\", \")}</b>\n        </Message>\n        <Form.Button type=\"submit\"> Submit</Form.Button>\n      </Form>\n    );\n  };\n\n  vote = (type, post_id) => {\n    this.getVoteRequest(type, post_id).then(result => {\n      if (result.data.success) {\n        this.getAllSubmissions();\n      }\n    });\n  };\n\n  getVoteRequest = (type, post_id) => {\n    let params = {};\n    params[type] = true;\n    params[post_id] = post_id;\n    return Axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000\" + \"/user/reaction\",\n      params: params,\n      withCredentials: true\n    });\n  };\n\n  render = () => {\n    console.log(this.props.location);\n    return (\n      <Fragment>\n        {this.renderSubmissionForm()}\n        {this.renderFriendSubmissions(this.state.submissions)}\n      </Fragment>\n    );\n  };\n}\n\nAssignmentDetails = withRouter(AssignmentDetails);\nexport default AssignmentDetails;\n"]},"metadata":{},"sourceType":"module"}
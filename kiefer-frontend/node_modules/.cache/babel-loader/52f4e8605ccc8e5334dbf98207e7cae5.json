{"ast":null,"code":"var _jsxFileName = \"/home/shivam/code/kiefer/src/components/Dashboard.js\";\nimport React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { Grid, Label, Message, Table, Tab, Icon, Divider, Form, TextArea, Header, Popup, Button, Container, Card } from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      assignments: [{\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }, {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }, {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }]\n    };\n\n    this.componentDidMount = () => {\n      this.getActiveAssignmentsRequest().then(result => {\n        console.log(result.data);\n        console.log(this.state);\n      });\n    };\n\n    this.getActiveAssignmentsRequest = () => {\n      return Axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000\" + \"/user/assigments\",\n        withCredentials: true\n      });\n    };\n\n    this.renderAssignment = assignment => {\n      return React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, assignment.heading)), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"1  \", React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"2 \", React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"1 \", React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(Card.Meta, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    };\n\n    this.renderAssignments = assignments => {\n      return assignments.map(assignment => this.renderAssignment(assignment));\n    };\n\n    this.renderNewAssignmentForm = () => {\n      return React.createElement(Popup, {\n        on: \"click\",\n        trigger: React.createElement(Button, {\n          floated: \"right\",\n          icon: true,\n          labelPosition: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, \" \", React.createElement(Icon, {\n          name: \"plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), \" new assignment\"),\n        content: React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \" Createw new assignment\"), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"what should the students write about ?\"), React.createElement(TextArea, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \" \")), React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"give students new words to learn!\"), React.createElement(Form.Input, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \" days to submission\"), React.createElement(Form.Input, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        })), React.createElement(Form.Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Create assignment\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.renderNewAssignmentForm(), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 10,\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Awards 13\", \" \", React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        width: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Trophies 13\", \" \", React.createElement(Icon, {\n        name: \"graduation cap\",\n        color: \"yellow\",\n        size: \"large\",\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"heart outline\",\n        color: \"olive\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), this.renderAssignments(this.state.assignments));\n    };\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/shivam/code/kiefer/src/components/Dashboard.js"],"names":["React","Fragment","Axios","Grid","Label","Message","Table","Tab","Icon","Divider","Form","TextArea","Header","Popup","Button","Container","Card","Dashboard","Component","state","assignments","heading","text","doc","dos","componentDidMount","getActiveAssignmentsRequest","then","result","console","log","data","method","url","withCredentials","renderAssignment","assignment","renderAssignments","map","renderNewAssignmentForm","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Axios from \"axios\";\n\nimport {\n  Grid,\n  Label,\n  Message,\n  Table,\n  Tab,\n  Icon,\n  Divider,\n  Form,\n  TextArea,\n  Header,\n  Popup,\n  Button,\n  Container, \n  Card\n} from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n  state = {\n    assignments: [\n      {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      },\n      {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      },\n      {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }\n    ]\n  };\n\n  componentDidMount = () => {\n    this.getActiveAssignmentsRequest().then(result => {\n      console.log(result.data);\n      console.log(this.state);\n    });\n  };\n\n  getActiveAssignmentsRequest = () => {\n    return Axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000\" + \"/user/assigments\",\n      withCredentials: true\n    });\n  };\n\n  renderAssignment = assignment => {\n    return (\n      <Card>\n        <Card.Content>\n        <Card.Header>\n          {assignment.heading}\n        </Card.Header>\n        </Card.Content>\n        <Card.Content>\n                1  <Icon name=\"star outline\" color=\"yellow\" size=\"large\" />\n              2 <Icon name=\"handshake outline\" color=\"blue\" size=\"large\" />\n              1 <Icon name=\"hand peace outline\" color=\"purple\" size=\"large\" /></Card.Content>\n        <Card.Meta></Card.Meta>\n      </Card>\n    );\n  };\n\n  renderAssignments = assignments => {\n    return assignments.map(assignment => this.renderAssignment(assignment));\n  };\n\n  renderNewAssignmentForm = () => {\n    return (\n      <Popup\n        on=\"click\"\n        trigger={<Button  floated=\"right\" icon labelPosition=\"right\"> <Icon name=\"plus\"></Icon> new assignment</Button>}\n        content={\n          <Form>\n            <Header> Createw new assignment</Header>\n            <Form.Field>\n              <label>what should the students write about ?</label>\n              <TextArea> </TextArea>\n            </Form.Field>\n            <Form.Group>\n              <Form.Field>\n                <label>give students new words to learn!</label>\n                <Form.Input></Form.Input>\n              </Form.Field>\n              <Form.Field>\n                <label> days to submission</label>\n                <Form.Input></Form.Input>\n              </Form.Field>\n              <Form.Button>Create assignment</Form.Button>\n            </Form.Group>\n          </Form>\n        }\n      ></Popup>\n    );\n  };\n\n  render = () => {\n    return (\n      <Fragment>\n        {this.renderNewAssignmentForm()}\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10} textAlign=\"right\">\n              Awards 13{\" \"}\n              <Icon name=\"star outline\" color=\"yellow\" size=\"large\" />\n              13 <Icon name=\"handshake outline\" color=\"blue\" size=\"large\" />\n              13 <Icon name=\"hand peace outline\" color=\"purple\" size=\"large\" />\n            </Grid.Column>\n            <Grid.Column width={6}>\n              Trophies 13{\" \"}\n              <Icon\n                name=\"graduation cap\"\n                color=\"yellow\"\n                size=\"large\"\n                textAlign=\"right\"\n              />\n              13 <Icon name=\"heart outline\" color=\"olive\" size=\"large\" />\n            </Grid.Column>\n            <Grid.Column></Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Divider />\n        {this.renderAssignments(this.state.assignments)}\n      </Fragment>\n    );\n  };\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/shivam/code/kiefer/src/components/Dashboard.js\";\nimport React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Grid, Label, Message, Table, Tab, Icon, Divider, Form, TextArea, Header, Popup, Button, Container, Card } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router\";\nimport \"./dashboard.css\";\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      assignments: [{\n        header: \"Write about your trip to England\",\n        keyword: \"afrikanische\",\n        deadline: \"123\"\n      }]\n    };\n\n    this.componentDidMount = () => {\n      this.getActiveAssignmentsRequest().then(result => {\n        // header, mongoid, keyword, created, deadline, submission\n        this.setState({\n          assignments: result.data.assignments\n        });\n      });\n    };\n\n    this.getActiveAssignmentsRequest = () => {\n      return Axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000\" + \"/user/assignments\",\n        withCredentials: true\n      });\n    };\n\n    this.onNewAssignmentFormChange = (e, {\n      name,\n      value\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.createNewAssignment = () => {\n      this.getCreateAssignmentRequest(this.state.assignment_header, this.state.assignment_keywords, this.state.assignment_days).then(result => {\n        if (result.data.success) {\n          console.log(result.data);\n          this.state.assignments.push({\n            heading: this.state.assignment_header,\n            tag: this.state.assignment_keywords,\n            day: this.state.assignment_days\n          });\n        }\n      });\n    };\n\n    this.getCreateAssignmentRequest = (header, keywords, days) => {\n      return Axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:8000\" + \"/user/create_assignment\",\n        params: {\n          header: header,\n          keywords: keywords,\n          day: days\n        },\n        withCredentials: true\n      });\n    };\n\n    this.renderAssignment = assignment => {\n      return React.createElement(Grid.Column, {\n        width: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: {\n          pathname: \"/assignment_details\",\n          assignment: assignment\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          marginTop: \"16px\"\n        },\n        className: \"grow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, assignment.header)), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"1 \", React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), \"2 \", React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \"1 \", React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \" \", assignment.deadline), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" \", assignment.submission))));\n    };\n\n    this.renderAssignments = assignments => {\n      return assignments.map(assignment => this.renderAssignment(assignment));\n    };\n\n    this.renderNewAssignmentForm = () => {};\n\n    this.render = () => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, this.renderNewAssignmentForm(), React.createElement(Card, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Awards \"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" \", \"13 \", React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \" Trophies \"), React.createElement(Card.Description, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        name: \"graduation cap\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"heart outline\",\n        color: \"olive\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        padded: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        on: \"click\",\n        trigger: React.createElement(Card, {\n          style: {\n            marginTop: \"16px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(Card.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, \" Create new assignment\")), React.createElement(Card.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          name: \"plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, \" \"))),\n        content: React.createElement(Form, {\n          onSubmit: this.createNewAssignment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, \" Createw new assignment\"), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, \"what should the students write about ?\"), React.createElement(TextArea, {\n          name: \"assignment_header\",\n          onChange: this.onNewAssignmentFormChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        })), React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, \"give students new words to learn!\"), React.createElement(Form.Input, {\n          name: \"assignment_keywords\",\n          onChange: this.onNewAssignmentFormChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, \" days to submission\"), React.createElement(Form.Input, {\n          name: \"assignment_days\",\n          onChange: this.onNewAssignmentFormChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        })), React.createElement(Form.Button, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, \"Create assignment\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), this.renderAssignments(this.state.assignments))));\n    };\n  }\n\n}\n\nDashboard = withRouter(Dashboard);\nexport default Dashboard;","map":{"version":3,"sources":["/home/shivam/code/kiefer/src/components/Dashboard.js"],"names":["React","Fragment","Axios","BrowserRouter","Router","Route","Link","Grid","Label","Message","Table","Tab","Icon","Divider","Form","TextArea","Header","Popup","Button","Container","Card","withRouter","Dashboard","Component","state","assignments","header","keyword","deadline","componentDidMount","getActiveAssignmentsRequest","then","result","setState","data","method","url","withCredentials","onNewAssignmentFormChange","e","name","value","createNewAssignment","getCreateAssignmentRequest","assignment_header","assignment_keywords","assignment_days","success","console","log","push","heading","tag","day","keywords","days","params","renderAssignment","assignment","pathname","marginTop","submission","renderAssignments","map","renderNewAssignmentForm","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AACA,SACEC,IADF,EAEEC,KAFF,EAGEC,OAHF,EAIEC,KAJF,EAKEC,GALF,EAMEC,IANF,EAOEC,OAPF,EAQEC,IARF,EASEC,QATF,EAUEC,MAVF,EAWEC,KAXF,EAYEC,MAZF,EAaEC,SAbF,EAcEC,IAdF,QAeO,mBAfP;AAgBA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAO,iBAAP;;AAEA,MAAMC,SAAN,SAAwBtB,KAAK,CAACuB,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,WAAW,EAAE,CACX;AACEC,QAAAA,MAAM,EAAE,kCADV;AAEEC,QAAAA,OAAO,EAAE,cAFX;AAGEC,QAAAA,QAAQ,EAAE;AAHZ,OADW;AADP,KAD8B;;AAAA,SAWtCC,iBAXsC,GAWlB,MAAM;AACxB,WAAKC,2BAAL,GAAmCC,IAAnC,CAAwCC,MAAM,IAAI;AAChD;AACA,aAAKC,QAAL,CAAc;AACZR,UAAAA,WAAW,EAAEO,MAAM,CAACE,IAAP,CAAYT;AADb,SAAd;AAGD,OALD;AAMD,KAlBqC;;AAAA,SAoBtCK,2BApBsC,GAoBR,MAAM;AAClC,aAAO5B,KAAK,CAAC;AACXiC,QAAAA,MAAM,EAAE,KADG;AAEXC,QAAAA,GAAG,EAAE,0BAA0B,mBAFpB;AAGXC,QAAAA,eAAe,EAAE;AAHN,OAAD,CAAZ;AAKD,KA1BqC;;AAAA,SA4BtCC,yBA5BsC,GA4BV,CAACC,CAAD,EAAI;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAJ,KAC1B,KAAKR,QAAL,CAAc;AAAE,OAACO,IAAD,GAAQC;AAAV,KAAd,CA7BoC;;AAAA,SA+BtCC,mBA/BsC,GA+BhB,MAAM;AAC1B,WAAKC,0BAAL,CACE,KAAKnB,KAAL,CAAWoB,iBADb,EAEE,KAAKpB,KAAL,CAAWqB,mBAFb,EAGE,KAAKrB,KAAL,CAAWsB,eAHb,EAIEf,IAJF,CAIOC,MAAM,IAAI;AACf,YAAIA,MAAM,CAACE,IAAP,CAAYa,OAAhB,EAAyB;AACvBC,UAAAA,OAAO,CAACC,GAAR,CAAYjB,MAAM,CAACE,IAAnB;AACA,eAAKV,KAAL,CAAWC,WAAX,CAAuByB,IAAvB,CAA4B;AAC1BC,YAAAA,OAAO,EAAE,KAAK3B,KAAL,CAAWoB,iBADM;AAE1BQ,YAAAA,GAAG,EAAE,KAAK5B,KAAL,CAAWqB,mBAFU;AAG1BQ,YAAAA,GAAG,EAAE,KAAK7B,KAAL,CAAWsB;AAHU,WAA5B;AAKD;AACF,OAbD;AAcD,KA9CqC;;AAAA,SAgDtCH,0BAhDsC,GAgDT,CAACjB,MAAD,EAAS4B,QAAT,EAAmBC,IAAnB,KAA4B;AACvD,aAAOrD,KAAK,CAAC;AACXiC,QAAAA,MAAM,EAAE,MADG;AAEXC,QAAAA,GAAG,EAAE,0BAA0B,yBAFpB;AAGXoB,QAAAA,MAAM,EAAE;AACN9B,UAAAA,MAAM,EAAEA,MADF;AAEN4B,UAAAA,QAAQ,EAAEA,QAFJ;AAGND,UAAAA,GAAG,EAAEE;AAHC,SAHG;AAQXlB,QAAAA,eAAe,EAAE;AARN,OAAD,CAAZ;AAUD,KA3DqC;;AAAA,SA6DtCoB,gBA7DsC,GA6DnBC,UAAU,IAAI;AAC/B,aACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,QAAQ,EAAE,qBADR;AAEFD,UAAAA,UAAU,EAAEA;AAFV,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEE,UAAAA,SAAS,EAAE;AAAb,SAAb;AAAoC,QAAA,SAAS,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAcF,UAAU,CAAChC,MAAzB,CADF,CADF,EAIE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,KAAK,EAAC,QAAhC;AAAyC,QAAA,IAAI,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,QAEI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,mBAAX;AAA+B,QAAA,KAAK,EAAC,MAArC;AAA4C,QAAA,IAAI,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,QAGI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,oBAAX;AAAgC,QAAA,KAAK,EAAC,QAAtC;AAA+C,QAAA,IAAI,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAJF,EASE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsBgC,UAAU,CAAC9B,QAAjC,CATF,EAUE,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsB8B,UAAU,CAACG,UAAjC,CAVF,CANF,CADF,CADF;AAuBD,KArFqC;;AAAA,SAuFtCC,iBAvFsC,GAuFlBrC,WAAW,IAAI;AACjC,aAAOA,WAAW,CAACsC,GAAZ,CAAgBL,UAAU,IAAI,KAAKD,gBAAL,CAAsBC,UAAtB,CAA9B,CAAP;AACD,KAzFqC;;AAAA,SA2FtCM,uBA3FsC,GA2FZ,MAAM,CAAE,CA3FI;;AAAA,SA6FtCC,MA7FsC,GA6F7B,MAAM;AACb,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKD,uBAAL,EADH,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,SAEK,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,cAAX;AAA0B,QAAA,KAAK,EAAC,QAAhC;AAAyC,QAAA,IAAI,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFL,SAGK,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,mBAAX;AAA+B,QAAA,KAAK,EAAC,MAArC;AAA4C,QAAA,IAAI,EAAC,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHL,SAIK,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,oBAAX;AAAgC,QAAA,KAAK,EAAC,QAAtC;AAA+C,QAAA,IAAI,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJL,CAFF,CADF,EAUE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,gBAAX;AAA4B,QAAA,KAAK,EAAC,QAAlC;AAA2C,QAAA,IAAI,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,SAGK,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,eAAX;AAA2B,QAAA,KAAK,EAAC,OAAjC;AAAyC,QAAA,IAAI,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHL,CAFF,CAVF,CAHF,EAuBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBF,EAwBE,oBAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAa,QAAA,OAAO,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,EAAE,EAAC,OADL;AAEE,QAAA,OAAO,EACL,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEJ,YAAAA,SAAS,EAAE;AAAb,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,EAIE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAJF,CAHJ;AAYE,QAAA,OAAO,EACL,oBAAC,IAAD;AAAM,UAAA,QAAQ,EAAE,KAAKlB,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADF,EAEE,oBAAC,QAAD;AACE,UAAA,IAAI,EAAC,mBADP;AAEE,UAAA,QAAQ,EAAE,KAAKJ,yBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAFF,EASE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AACE,UAAA,IAAI,EAAC,qBADP;AAEE,UAAA,QAAQ,EAAE,KAAKA,yBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF,EAQE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE,oBAAC,IAAD,CAAM,KAAN;AACE,UAAA,IAAI,EAAC,iBADP;AAEE,UAAA,QAAQ,EAAE,KAAKA,yBAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CARF,EAeE,oBAAC,IAAD,CAAM,MAAN;AAAa,UAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAfF,CATF,CAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EA6CG,KAAKwB,iBAAL,CAAuB,KAAKtC,KAAL,CAAWC,WAAlC,CA7CH,CADF,CAxBF,CADF;AA4ED,KA1KqC;AAAA;;AAAA;;AA6KxCH,SAAS,GAAGD,UAAU,CAACC,SAAD,CAAtB;AACA,eAAeA,SAAf","sourcesContent":["import React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport {\n  Grid,\n  Label,\n  Message,\n  Table,\n  Tab,\n  Icon,\n  Divider,\n  Form,\n  TextArea,\n  Header,\n  Popup,\n  Button,\n  Container,\n  Card\n} from \"semantic-ui-react\";\nimport { withRouter } from \"react-router\";\nimport \"./dashboard.css\";\n\nclass Dashboard extends React.Component {\n  state = {\n    assignments: [\n      {\n        header: \"Write about your trip to England\",\n        keyword: \"afrikanische\",\n        deadline: \"123\"\n      }\n    ]\n  };\n\n  componentDidMount = () => {\n    this.getActiveAssignmentsRequest().then(result => {\n      // header, mongoid, keyword, created, deadline, submission\n      this.setState({\n        assignments: result.data.assignments\n      });\n    });\n  };\n\n  getActiveAssignmentsRequest = () => {\n    return Axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000\" + \"/user/assignments\",\n      withCredentials: true\n    });\n  };\n\n  onNewAssignmentFormChange = (e, { name, value }) =>\n    this.setState({ [name]: value });\n\n  createNewAssignment = () => {\n    this.getCreateAssignmentRequest(\n      this.state.assignment_header,\n      this.state.assignment_keywords,\n      this.state.assignment_days\n    ).then(result => {\n      if (result.data.success) {\n        console.log(result.data);\n        this.state.assignments.push({\n          heading: this.state.assignment_header,\n          tag: this.state.assignment_keywords,\n          day: this.state.assignment_days\n        });\n      }\n    });\n  };\n\n  getCreateAssignmentRequest = (header, keywords, days) => {\n    return Axios({\n      method: \"post\",\n      url: \"http://127.0.0.1:8000\" + \"/user/create_assignment\",\n      params: {\n        header: header,\n        keywords: keywords,\n        day: days\n      },\n      withCredentials: true\n    });\n  };\n\n  renderAssignment = assignment => {\n    return (\n      <Grid.Column width={8}>\n        <Link\n          to={{\n            pathname: \"/assignment_details\",\n            assignment: assignment\n          }}\n        >\n          <Card style={{ marginTop: \"16px\" }} className=\"grow\">\n            <Card.Content>\n              <Card.Header>{assignment.header}</Card.Header>\n            </Card.Content>\n            <Card.Content>\n              1 <Icon name=\"star outline\" color=\"yellow\" size=\"large\" />\n              2 <Icon name=\"handshake outline\" color=\"blue\" size=\"large\" />\n              1 <Icon name=\"hand peace outline\" color=\"purple\" size=\"large\" />\n            </Card.Content>\n            <Card.Content extra> {assignment.deadline}</Card.Content>\n            <Card.Content extra> {assignment.submission}</Card.Content>\n          </Card>\n        </Link>\n      </Grid.Column>\n    );\n  };\n\n  renderAssignments = assignments => {\n    return assignments.map(assignment => this.renderAssignment(assignment));\n  };\n\n  renderNewAssignmentForm = () => {};\n\n  render = () => {\n    return (\n      <Fragment>\n        {this.renderNewAssignmentForm()}\n\n        <Card color=\"blue\">\n          <Card.Content>\n            <Card.Header>Awards </Card.Header>\n            <Card.Description>\n              {\" \"}\n              13 <Icon name=\"star outline\" color=\"yellow\" size=\"large\" />\n              13 <Icon name=\"handshake outline\" color=\"blue\" size=\"large\" />\n              13 <Icon name=\"hand peace outline\" color=\"purple\" size=\"large\" />\n            </Card.Description>\n          </Card.Content>\n          <Card.Content>\n            <Card.Header> Trophies </Card.Header>\n            <Card.Description>\n              {\" \"}\n              <Icon name=\"graduation cap\" color=\"yellow\" size=\"large\" />\n              13 <Icon name=\"heart outline\" color=\"olive\" size=\"large\" />\n            </Card.Description>\n          </Card.Content>\n        </Card>\n\n        <Divider />\n        <Grid padded relaxed>\n          <Grid.Row>\n            <Grid.Column width={8}>\n              <Popup\n                on=\"click\"\n                trigger={\n                  <Card style={{ marginTop: \"16px\" }}>\n                    <Card.Content>\n                      <Card.Header> Create new assignment</Card.Header>\n                    </Card.Content>\n                    <Card.Content>\n                      <Icon name=\"plus\"> </Icon>\n                    </Card.Content>\n                  </Card>\n                }\n                content={\n                  <Form onSubmit={this.createNewAssignment}>\n                    <Header> Createw new assignment</Header>\n                    <Form.Field>\n                      <label>what should the students write about ?</label>\n                      <TextArea\n                        name=\"assignment_header\"\n                        onChange={this.onNewAssignmentFormChange}\n                      />\n                    </Form.Field>\n                    <Form.Group>\n                      <Form.Field>\n                        <label>give students new words to learn!</label>\n                        <Form.Input\n                          name=\"assignment_keywords\"\n                          onChange={this.onNewAssignmentFormChange}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Field>\n                        <label> days to submission</label>\n                        <Form.Input\n                          name=\"assignment_days\"\n                          onChange={this.onNewAssignmentFormChange}\n                        ></Form.Input>\n                      </Form.Field>\n                      <Form.Button type=\"submit\">Create assignment</Form.Button>\n                    </Form.Group>\n                  </Form>\n                }\n              ></Popup>\n            </Grid.Column>\n            {this.renderAssignments(this.state.assignments)}\n          </Grid.Row>\n        </Grid>\n      </Fragment>\n    );\n  };\n}\n\nDashboard = withRouter(Dashboard);\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/shivam/code/kiefer/src/components/assignment_details..js\";\nimport React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { Message, Menu, Image, Table, Tab, Icon, Divider, Form, TextArea, Header, Popup, Button, Container, Card, Comment, Segment, Grid, Label } from \"semantic-ui-react\";\n\nclass AssignmentDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      submissionSuccessful: false,\n      submissions: [{\n        mongoid: \"1234\",\n        name: \"Wiwi\",\n        text: \"yoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyo\",\n        comments: [],\n        new_comment_text: \"\"\n      }],\n      alreadySubmitted: true\n    };\n\n    this.componentDidMount = () => {\n      this.getAllSubmissions();\n    };\n\n    this.getSubmissions = () => {};\n\n    this.onCreateSubmission = () => {\n      this.getNewSubmissionRequest(this.props.location.assignment.mongoid, this.state.submission_text).then(result => {\n        if (result.data.success) {\n          console.log(result.data);\n          this.setState({\n            submissionSuccessful: true\n          });\n        }\n      });\n    };\n\n    this.onFormChange = (e, {\n      name,\n      value\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.getNewSubmissionRequest = (assignment_id, text) => {\n      return Axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:8000\" + \"/user/submit\",\n        params: {\n          assignment_id: assignment_id,\n          text: text\n        },\n        withCredentials: true\n      });\n    };\n\n    this.getAllPostsRequest = () => {\n      return Axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000\" + \"/user/get_post\",\n        params: {\n          assignment_id: this.props.location.assignment.mongoid\n        },\n        withCredentials: true\n      });\n    };\n\n    this.getAllSubmissions = () => {\n      this.getAllPostsRequest().then(result => {\n        if (result.data.success) {\n          console.log(result.data.posts);\n          this.setState({\n            submissions: result.data.posts,\n            alreadySubmitted: result.data.submitted\n          });\n        }\n      });\n    };\n\n    this.renderVoteMenu = submission => {\n      return React.createElement(Menu, {\n        compact: true,\n        icon: true,\n        floated: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        onClick: () => this.vote(\"amazing_story\", submission.mongoid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(Label, {\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, submission.amazing_story)), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        onClick: () => this.vote(\"well_written\", submission.mongoid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(Label, {\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, submission.well_written)), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        onClick: () => this.vote(\"hilarious\", submission.mongoid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(Label, {\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, submission.hilarious)), typeof this.props.location.user !== \"undefined\" && this.props.location.user.role === \"teacher\" ? React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"graduation cap\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(Label, {\n        color: \"yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"1\")), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"heart outline\",\n        color: \"olive\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(Label, {\n        color: \"yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"1\")), \" \") : null);\n    };\n\n    this.renderComments = (comments, name) => {\n      comments.map(comment => {\n        this.renderComment(comment, name);\n      });\n    };\n\n    this.onNewCommentSubmit = submission_id => {\n      this.getNewCommentRequest(submission_id, this.state.new_comment_text).then(result => {\n        if (result.data.success) {}\n      });\n    };\n\n    this.getNewCommentRequest = (submission_id, text) => {\n      return Axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:8000\" + \"/user/add_comment\",\n        params: {\n          submission_id: submission_id,\n          comment: text\n        },\n        withCredentials: true\n      });\n    };\n\n    this.renderFriendSubmission = submission => {\n      let getplaceholder = () => {\n        return \"Encourage \" + submission.name + \" ! Some grammar tips, perhaps ?\";\n      };\n\n      return React.createElement(Segment, {\n        color: \"teal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        padded: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, submission.name, \" writes\")), React.createElement(Grid.Column, {\n        width: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, this.renderVoteMenu(submission))), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, submission.text)), React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Comment.Group, {\n        minimal: true,\n        size: \"mini\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, this.renderComments(submission.comments, submission.name), React.createElement(Form, {\n        reply: true,\n        onSubmit: () => this.onNewCommentSubmit(submission.mongoid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, React.createElement(Form.TextArea, {\n        name: \"new_comment_text\",\n        onChange: this.onCommentFormChange,\n        placeholder: getplaceholder(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }), React.createElement(Button, {\n        content: \"comment\",\n        labelPosition: \"right\",\n        icon: \"edit\",\n        primary: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })))))));\n    };\n\n    this.renderFriendSubmissions = submissions => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \" Checkout your classmates' submissions\"), submissions.map(s => {\n        return this.renderFriendSubmission(s);\n      }));\n    };\n\n    this.onCommentFormChange = (e, {\n      name,\n      value\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.renderSubmissionForm = () => {\n      return this.state.submissionSuccessful || this.state.alreadySubmitted ? React.createElement(Message, {\n        success: true,\n        compact: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(Message.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Well done on finishing this assignment!\", \" \"), \"Now check out posts from your friends and see what else you can learn.\") : React.createElement(Form, {\n        onSubmit: this.onCreateSubmission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, this.props.location.assignment.header), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \"Give it your best shot!\"), React.createElement(TextArea, {\n        name: \"submission_text\",\n        onChange: this.onFormChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      })), React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Don't forget to include these words for extra points ;)\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, this.props.location.assignment.keyword.join(\", \"))), React.createElement(Form.Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \" Submit\"));\n    };\n\n    this.vote = (type, post_id) => {\n      this.getVoteRequest(type, post_id).then(result => {\n        if (result.data.success) {\n          this.getAllSubmissions();\n        }\n      });\n    };\n\n    this.getVoteRequest = (type, post_id) => {\n      let params = {};\n      params[type] = true;\n      params[\"post_id\"] = post_id;\n      return Axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000\" + \"/user/reaction\",\n        params: params,\n        withCredentials: true\n      });\n    };\n\n    this.render = () => {\n      console.log(this.props.location);\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        header: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, \" SprachCafe\")), React.createElement(Menu.Menu, {\n        position: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }), \" \", React.createElement(Label, {\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, \"1\")), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }), \" \", React.createElement(Label, {\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, \"3\")), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }), \" \", React.createElement(Label, {\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, \"1\")), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"graduation cap\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(Label, {\n        color: \"yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, \"1\")), React.createElement(Menu.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"heart outline\",\n        color: \"olive\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(Label, {\n        color: \"yellow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"1\")))), this.renderSubmissionForm(), this.renderFriendSubmissions(this.state.submissions));\n    };\n  }\n\n  renderComment(comment, name) {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h3\",\n      dividing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"How did \", name, \" do ?\"), React.createElement(Comment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Comment.Avatar, {\n      src: \"https://react.semantic-ui.com/images/avatar/small/matt.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Comment.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Comment.Author, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, comment.name), React.createElement(Comment.Metadata, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Today at 5:42PM\")), React.createElement(Comment.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, comment.comment), React.createElement(Comment.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Comment.Action, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Reply\")))));\n  }\n\n}\n\nAssignmentDetails = withRouter(AssignmentDetails);\nexport default AssignmentDetails;","map":{"version":3,"sources":["/home/shivam/code/kiefer/src/components/assignment_details..js"],"names":["React","Fragment","Axios","BrowserRouter","Router","Route","Link","withRouter","Message","Menu","Image","Table","Tab","Icon","Divider","Form","TextArea","Header","Popup","Button","Container","Card","Comment","Segment","Grid","Label","AssignmentDetails","Component","state","submissionSuccessful","submissions","mongoid","name","text","comments","new_comment_text","alreadySubmitted","componentDidMount","getAllSubmissions","getSubmissions","onCreateSubmission","getNewSubmissionRequest","props","location","assignment","submission_text","then","result","data","success","console","log","setState","onFormChange","e","value","assignment_id","method","url","params","withCredentials","getAllPostsRequest","posts","submitted","renderVoteMenu","submission","vote","amazing_story","well_written","hilarious","user","role","renderComments","map","comment","renderComment","onNewCommentSubmit","submission_id","getNewCommentRequest","renderFriendSubmission","getplaceholder","onCommentFormChange","renderFriendSubmissions","s","renderSubmissionForm","header","keyword","join","type","post_id","getVoteRequest","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\nimport {\n  Message,\n  Menu,\n  Image,\n  Table,\n  Tab,\n  Icon,\n  Divider,\n  Form,\n  TextArea,\n  Header,\n  Popup,\n  Button,\n  Container,\n  Card,\n  Comment,\n  Segment,\n  Grid,\n  Label\n} from \"semantic-ui-react\";\n\nclass AssignmentDetails extends React.Component {\n  state = {\n    submissionSuccessful: false,\n    submissions: [\n      {\n        mongoid: \"1234\",\n        name: \"Wiwi\",\n        text:\n          \"yoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyoyo\",\n        comments: [],\n        new_comment_text: \"\"\n      }\n    ],\n    alreadySubmitted: true\n  };\n\n  componentDidMount = () => {\n    this.getAllSubmissions();\n  };\n\n  getSubmissions = () => {};\n\n  onCreateSubmission = () => {\n    this.getNewSubmissionRequest(\n      this.props.location.assignment.mongoid,\n      this.state.submission_text\n    ).then(result => {\n      if (result.data.success) {\n        console.log(result.data);\n        this.setState({ submissionSuccessful: true });\n      }\n    });\n  };\n\n  onFormChange = (e, { name, value }) => this.setState({ [name]: value });\n\n  getNewSubmissionRequest = (assignment_id, text) => {\n    return Axios({\n      method: \"post\",\n      url: \"http://127.0.0.1:8000\" + \"/user/submit\",\n      params: {\n        assignment_id: assignment_id,\n        text: text\n      },\n      withCredentials: true\n    });\n  };\n\n  getAllPostsRequest = () => {\n    return Axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000\" + \"/user/get_post\",\n      params: {\n        assignment_id: this.props.location.assignment.mongoid\n      },\n      withCredentials: true\n    });\n  };\n\n  getAllSubmissions = () => {\n    this.getAllPostsRequest().then(result => {\n      if (result.data.success) {\n        console.log(result.data.posts);\n        this.setState({\n          submissions: result.data.posts,\n          alreadySubmitted: result.data.submitted\n        });\n      }\n    });\n  };\n\n  renderVoteMenu = submission => {\n    return (\n      <Menu compact icon floated=\"right\">\n        <Menu.Item>\n          <Icon\n            name=\"star outline\"\n            color=\"yellow\"\n            size=\"large\"\n            onClick={() => this.vote(\"amazing_story\", submission.mongoid)}\n          />\n          <Label color=\"grey\">{submission.amazing_story}</Label>\n        </Menu.Item>\n        <Menu.Item>\n          <Icon\n            name=\"handshake outline\"\n            color=\"blue\"\n            size=\"large\"\n            onClick={() => this.vote(\"well_written\", submission.mongoid)}\n          />\n          <Label color=\"grey\">{submission.well_written}</Label>\n        </Menu.Item>\n        <Menu.Item>\n          <Icon\n            name=\"hand peace outline\"\n            color=\"purple\"\n            size=\"large\"\n            onClick={() => this.vote(\"hilarious\", submission.mongoid)}\n          />\n          <Label color=\"grey\">{submission.hilarious}</Label>\n        </Menu.Item>\n        {typeof this.props.location.user !== \"undefined\" &&\n        this.props.location.user.role === \"teacher\" ? (\n          <Fragment>\n            <Menu.Item>\n              <Icon name=\"graduation cap\" color=\"yellow\" size=\"large\" />\n              <Label color=\"yellow\">1</Label>\n            </Menu.Item>\n            <Menu.Item>\n              <Icon name=\"heart outline\" color=\"olive\" size=\"large\" />\n              <Label color=\"yellow\">1</Label>\n            </Menu.Item>{\" \"}\n          </Fragment>\n        ) : null}\n      </Menu>\n    );\n  };\n\n  renderComment(comment, name) {\n    return (\n      <Fragment>\n        <Header as=\"h3\" dividing>\n          How did {name} do ?\n        </Header>\n        <Comment>\n          <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n          <Comment.Content>\n            <Comment.Author as=\"a\">{comment.name}</Comment.Author>\n            <Comment.Metadata>\n              <div>Today at 5:42PM</div>\n            </Comment.Metadata>\n            <Comment.Text>{comment.comment}</Comment.Text>\n            <Comment.Actions>\n              <Comment.Action>Reply</Comment.Action>\n            </Comment.Actions>\n          </Comment.Content>\n        </Comment>\n      </Fragment>\n    );\n  }\n\n  renderComments = (comments, name) => {\n    comments.map(comment => {\n      this.renderComment(comment, name);\n    });\n  };\n\n  onNewCommentSubmit = submission_id => {\n    this.getNewCommentRequest(submission_id, this.state.new_comment_text).then(\n      result => {\n        if (result.data.success) {\n        }\n      }\n    );\n  };\n\n  getNewCommentRequest = (submission_id, text) => {\n    return Axios({\n      method: \"post\",\n      url: \"http://127.0.0.1:8000\" + \"/user/add_comment\",\n      params: {\n        submission_id: submission_id,\n        comment: text\n      },\n      withCredentials: true\n    });\n  };\n\n  renderFriendSubmission = submission => {\n    let getplaceholder = () => {\n      return \"Encourage \" + submission.name + \" ! Some grammar tips, perhaps ?\";\n    };\n    return (\n      <Segment color=\"teal\">\n        <Grid padded relaxed>\n          <Grid.Row>\n            <Grid.Column width=\"12\">\n              <Header>{submission.name} writes</Header>\n            </Grid.Column>\n            <Grid.Column width=\"4\">\n              {this.renderVoteMenu(submission)}\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>{submission.text}</Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Comment.Group minimal size=\"mini\">\n                {this.renderComments(submission.comments, submission.name)}\n                <Form\n                  reply\n                  onSubmit={() => this.onNewCommentSubmit(submission.mongoid)}\n                >\n                  <Form.TextArea\n                    name=\"new_comment_text\"\n                    onChange={this.onCommentFormChange}\n                    placeholder={getplaceholder()}\n                  />\n                  <Button\n                    content=\"comment\"\n                    labelPosition=\"right\"\n                    icon=\"edit\"\n                    primary\n                  />\n                </Form>\n              </Comment.Group>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Segment>\n    );\n  };\n\n  renderFriendSubmissions = submissions => {\n    return (\n      <Fragment>\n        <Header> Checkout your classmates' submissions</Header>\n        {submissions.map(s => {\n          return this.renderFriendSubmission(s);\n        })}\n      </Fragment>\n    );\n  };\n\n  onCommentFormChange = (e, { name, value }) =>\n    this.setState({ [name]: value });\n\n  renderSubmissionForm = () => {\n    return this.state.submissionSuccessful || this.state.alreadySubmitted ? (\n      <Message success compact>\n        <Message.Header>\n          Well done on finishing this assignment!{\" \"}\n        </Message.Header>\n        Now check out posts from your friends and see what else you can learn.\n      </Message>\n    ) : (\n      <Form onSubmit={this.onCreateSubmission}>\n        <Header>{this.props.location.assignment.header}</Header>\n        <Form.Field>\n          <label>Give it your best shot!</label>\n          <TextArea name=\"submission_text\" onChange={this.onFormChange} />\n        </Form.Field>\n        <Message>\n          Don't forget to include these words for extra points ;)\n          <b>{this.props.location.assignment.keyword.join(\", \")}</b>\n        </Message>\n        <Form.Button type=\"submit\"> Submit</Form.Button>\n      </Form>\n    );\n  };\n\n  vote = (type, post_id) => {\n    this.getVoteRequest(type, post_id).then(result => {\n      if (result.data.success) {\n        this.getAllSubmissions();\n      }\n    });\n  };\n\n  getVoteRequest = (type, post_id) => {\n    let params = {};\n    params[type] = true;\n    params[\"post_id\"] = post_id;\n    return Axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000\" + \"/user/reaction\",\n      params: params,\n      withCredentials: true\n    });\n  };\n\n  render = () => {\n    console.log(this.props.location);\n    return (\n      <Fragment>\n              <Menu>\n        <Link to=\"/\">\n          <Menu.Item header> SprachCafe</Menu.Item>\n        </Link>\n        <Menu.Menu position=\"right\">\n          <Menu.Item>\n            <Icon name=\"star outline\" color=\"yellow\" size=\"large\" />{\" \"}\n            <Label color=\"grey\">1</Label>\n          </Menu.Item>\n          <Menu.Item>\n            <Icon name=\"handshake outline\" color=\"blue\" size=\"large\" />{\" \"}\n            <Label color=\"grey\">3</Label>\n          </Menu.Item>\n          <Menu.Item>\n            <Icon name=\"hand peace outline\" color=\"purple\" size=\"large\" />{\" \"}\n            <Label color=\"grey\">1</Label>\n          </Menu.Item>\n          <Menu.Item>\n            <Icon name=\"graduation cap\" color=\"yellow\" size=\"large\" /> \n            <Label color=\"yellow\">1</Label>\n          </Menu.Item>\n          <Menu.Item>\n            <Icon name=\"heart outline\" color=\"olive\" size=\"large\" /> \n            <Label color=\"yellow\">1</Label>\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n        {this.renderSubmissionForm()}\n        {this.renderFriendSubmissions(this.state.submissions)}\n      </Fragment>\n    );\n  };\n}\n\nAssignmentDetails = withRouter(AssignmentDetails);\nexport default AssignmentDetails;\n"]},"metadata":{},"sourceType":"module"}
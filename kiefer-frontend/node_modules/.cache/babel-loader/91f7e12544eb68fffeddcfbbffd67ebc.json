{"ast":null,"code":"var _jsxFileName = \"/home/shivam/code/kiefer/src/components/Dashboard.js\";\nimport React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { Grid, Label, Message, Table, Tab, Icon, Divider } from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      assignments: [{\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }, {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }, {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }]\n    };\n\n    this.componentDidMount = () => {\n      this.getActiveAssignmentsRequest().then(result => {\n        console.log(result.data);\n        console.log(this.state);\n      });\n    };\n\n    this.getActiveAssignmentsRequest = () => {\n      return Axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000\" + \"/user/assigments\",\n        withCredentials: true\n      });\n    };\n\n    this.renderAssignment = assignment => {\n      return React.createElement(Table.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, assignment.heading), \" \", React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"2 submissions already\"), React.createElement(Table.Cell, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"3 days to submission\"));\n    };\n\n    this.renderAssignments = assignments => {\n      return assignments.map(assignment => this.renderAssignment(assignment));\n    };\n\n    this.render = () => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 10,\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Trophies 13 \", React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        width: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Awards 13 \", React.createElement(Icon, {\n        name: \"graduation cap\",\n        color: \"yellow\",\n        size: \"large\",\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"heart outline\",\n        color: \"olive\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Table, {\n        celled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Table.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.renderAssignments(this.state.assignments))));\n    };\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/shivam/code/kiefer/src/components/Dashboard.js"],"names":["React","Fragment","Axios","Grid","Label","Message","Table","Tab","Icon","Divider","Dashboard","Component","state","assignments","heading","text","doc","dos","componentDidMount","getActiveAssignmentsRequest","then","result","console","log","data","method","url","withCredentials","renderAssignment","assignment","renderAssignments","map","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Axios from \"axios\";\n\nimport { Grid, Label, Message, Table, Tab, Icon, Divider } from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n  state = {\n    assignments: [\n      {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      },\n      {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      },\n      {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }\n    ]\n  };\n  \n\n  componentDidMount = () => {\n    this.getActiveAssignmentsRequest().then(result => {\n      console.log(result.data);\n      console.log(this.state)\n    });\n  };\n\n  getActiveAssignmentsRequest = () => {\n    return Axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000\" + \"/user/assigments\",\n      withCredentials: true\n    });\n  };\n\n  renderAssignment = assignment => {\n    return (\n      <Table.Row>\n        <Table.Cell>{assignment.heading}</Table.Cell>{\" \"}\n        <Table.Cell>2 submissions already</Table.Cell>\n        <Table.Cell>3 days to submission</Table.Cell>\n      </Table.Row>\n    );\n  };\n\n  renderAssignments = assignments => {\n    return assignments.map(assignment => this.renderAssignment(assignment));\n  };\n\n  render = () => {\n    return (\n      <Fragment>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10} textAlign=\"right\">\n                Trophies\n              13 <Icon name=\"star outline\" color=\"yellow\" size=\"large\" />\n              13 <Icon name=\"handshake outline\" color=\"blue\" size=\"large\" />\n              13 <Icon name=\"hand peace outline\" color=\"purple\" size=\"large\" />\n            </Grid.Column>\n            <Grid.Column width={6}>\n                Awards\n              13 <Icon name=\"graduation cap\" color=\"yellow\" size=\"large\" textAlign=\"right\"/>\n              13 <Icon name=\"heart outline\" color=\"olive\" size=\"large\" />\n            </Grid.Column>\n            <Grid.Column>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Divider />\n        \n        <Table celled>\n          <Table.Body>\n            {this.renderAssignments(this.state.assignments)}\n          </Table.Body>\n        </Table>\n      </Fragment>\n    );\n  };\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}
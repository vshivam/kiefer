{"ast":null,"code":"var _jsxFileName = \"/home/shivam/code/kiefer/src/components/assignment_details..js\";\nimport React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { Message, Grid, Label, Table, Tab, Icon, Divider, Form, TextArea, Header, Popup, Button, Container, Card } from \"semantic-ui-react\";\n\nclass AssignmentDetails extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      submissionSuccessful: false,\n      submissions: []\n    };\n\n    this.componentDidMount = () => {\n      this.getAllSubmissions();\n    };\n\n    this.getSubmissions = () => {};\n\n    this.onCreateSubmission = () => {\n      this.getNewSubmissionRequest(this.props.location.assignment.mongoid, this.state.submission_text).then(result => {\n        if (result.data.success) {\n          console.log(result.data);\n          this.setState({\n            submissionSuccessful: true\n          });\n        }\n      });\n    };\n\n    this.onFormChange = (e, {\n      name,\n      value\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.getNewSubmissionRequest = (assignment_id, text) => {\n      return Axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:8000\" + \"/user/submit\",\n        params: {\n          assignment_id: assignment_id,\n          text: text\n        },\n        withCredentials: true\n      });\n    };\n\n    this.getAllPostsRequest = () => {\n      return Axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000\" + \"/user/get_post\",\n        params: {\n          assignment_id: this.props.location.assignment.mongoid\n        },\n        withCredentials: true\n      });\n    };\n\n    this.getAllSubmissions = () => {\n      this.getAllPostsRequest().then(result => {\n        if (result.data.success) {\n          console.log(result.data.posts);\n          this.setState({\n            submissions: result.data.posts\n          });\n        }\n      });\n    };\n\n    this.render = () => {\n      console.log(this.props.location);\n      return this.state.submissionSuccessful ? React.createElement(Message, {\n        success: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \" Well done!\") : React.createElement(Form, {\n        onSubmit: this.onCreateSubmission,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.location.assignment.header), React.createElement(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Give it your best shot!\"), React.createElement(TextArea, {\n        name: \"submission_text\",\n        onChange: this.onFormChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(Message, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Don't forget to include these words for extra points ;)\", React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.props.location.assignment.keyword)), React.createElement(Form.Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" Submit\"));\n    };\n  }\n\n}\n\nAssignmentDetails = withRouter(AssignmentDetails);\nexport default AssignmentDetails;","map":{"version":3,"sources":["/home/shivam/code/kiefer/src/components/assignment_details..js"],"names":["React","Fragment","Axios","BrowserRouter","Router","Route","Link","withRouter","Message","Grid","Label","Table","Tab","Icon","Divider","Form","TextArea","Header","Popup","Button","Container","Card","AssignmentDetails","Component","state","submissionSuccessful","submissions","componentDidMount","getAllSubmissions","getSubmissions","onCreateSubmission","getNewSubmissionRequest","props","location","assignment","mongoid","submission_text","then","result","data","success","console","log","setState","onFormChange","e","name","value","assignment_id","text","method","url","params","withCredentials","getAllPostsRequest","posts","render","header","keyword"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\n\nimport {\n  Message,\n  Grid,\n  Label,\n  Table,\n  Tab,\n  Icon,\n  Divider,\n  Form,\n  TextArea,\n  Header,\n  Popup,\n  Button,\n  Container,\n  Card\n} from \"semantic-ui-react\";\n\nclass AssignmentDetails extends React.Component {\n  state = {\n    submissionSuccessful: false,\n    submissions: []\n  };\n\n  componentDidMount = () => {\n    this.getAllSubmissions();\n  };\n\n  getSubmissions = () => {};\n\n  onCreateSubmission = () => {\n    this.getNewSubmissionRequest(\n      this.props.location.assignment.mongoid,\n      this.state.submission_text\n    ).then(result => {\n      if (result.data.success) {\n        console.log(result.data);\n        this.setState({ submissionSuccessful: true });\n      }\n    });\n  };\n\n  onFormChange = (e, { name, value }) => this.setState({ [name]: value });\n\n  getNewSubmissionRequest = (assignment_id, text) => {\n    return Axios({\n      method: \"post\",\n      url: \"http://127.0.0.1:8000\" + \"/user/submit\",\n      params: {\n        assignment_id: assignment_id,\n        text: text\n      },\n      withCredentials: true\n    });\n  };\n\n  getAllPostsRequest = () => {\n    return Axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000\" + \"/user/get_post\",\n      params: {\n        assignment_id: this.props.location.assignment.mongoid\n      },\n      withCredentials: true\n    });\n  };\n\n  getAllSubmissions = () => {\n    this.getAllPostsRequest().then(result => {\n      if (result.data.success) {\n          console.log(result.data.posts)\n        this.setState({ submissions: result.data.posts });\n      }\n    });\n  };\n\n  render = () => {\n    console.log(this.props.location);\n    return this.state.submissionSuccessful ? (\n      <Message success> Well done!</Message>\n    ) : (\n      <Form onSubmit={this.onCreateSubmission}>\n        <Header>{this.props.location.assignment.header}</Header>\n        <Form.Field>\n          <label>Give it your best shot!</label>\n          <TextArea name=\"submission_text\" onChange={this.onFormChange} />\n        </Form.Field>\n        <Message>\n          Don't forget to include these words for extra points ;)\n          <b>{this.props.location.assignment.keyword}</b>\n        </Message>\n        <Form.Button type=\"submit\"> Submit</Form.Button>\n      </Form>\n    );\n  };\n}\n\nAssignmentDetails = withRouter(AssignmentDetails);\nexport default AssignmentDetails;\n"]},"metadata":{},"sourceType":"module"}
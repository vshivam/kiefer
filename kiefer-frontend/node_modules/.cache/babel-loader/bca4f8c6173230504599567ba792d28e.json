{"ast":null,"code":"var _jsxFileName = \"/home/shivam/code/kiefer/src/components/Dashboard.js\";\nimport React, { Fragment } from \"react\";\nimport Axios from \"axios\";\nimport { Grid, Label, Message, Table, Tab, Icon, Divider, Form, TextArea, Header, Popup, Button, Container, Card } from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      assignments: [{\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }, {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }, {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }]\n    };\n\n    this.componentDidMount = () => {\n      this.getActiveAssignmentsRequest().then(result => {\n        console.log(result.data);\n        console.log(this.state);\n      });\n    };\n\n    this.getActiveAssignmentsRequest = () => {\n      return Axios({\n        method: \"get\",\n        url: \"http://127.0.0.1:8000\" + \"/user/assigments\",\n        withCredentials: true\n      });\n    };\n\n    this.onNewAssignmentFormChange = (e, {\n      name,\n      value\n    }) => this.setState({\n      [name]: value\n    });\n\n    this.createNewAssignment = () => {\n      this.getCreateAssignmentRequest(this.state.assignment_header, this.state.assignment_keywords, this.state.assignment_days).then(result => {\n        if (result.data.success) {\n          console.log(result.data);\n        }\n      });\n    };\n\n    this.getCreateAssignmentRequest = (header, keywords, days) => {\n      return Axios({\n        method: \"post\",\n        url: \"http://127.0.0.1:8000\" + \"/user/create_assignment\",\n        params: {\n          header: header,\n          keywords: keywords,\n          day: days\n        },\n        withCredentials: true\n      });\n    };\n\n    this.renderAssignment = assignment => {\n      return React.createElement(Grid.Column, {\n        width: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          marginTop: \"16px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, assignment.heading)), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"1 \", React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), \"2 \", React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), \"1 \", React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })), React.createElement(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \" Submissions ending in 3 days\")));\n    };\n\n    this.renderAssignments = assignments => {\n      return assignments.map(assignment => this.renderAssignment(assignment));\n    };\n\n    this.renderNewAssignmentForm = () => {\n      return React.createElement(Popup, {\n        on: \"click\",\n        trigger: React.createElement(Button, {\n          floated: \"right\",\n          icon: true,\n          labelPosition: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \" \", React.createElement(Icon, {\n          name: \"plus\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }), \" new assignment\"),\n        content: React.createElement(Form, {\n          onSubmit: this.createNewAssignment,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \" Createw new assignment\"), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"what should the students write about ?\"), React.createElement(TextArea, {\n          name: \"assignment_header\",\n          onChange: this.onNewAssignmentFormChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \" \")), React.createElement(Form.Group, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, \"give students new words to learn!\"), React.createElement(Form.Input, {\n          name: \"assignment_keywords\",\n          onChange: this.onNewAssignmentFormChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        })), React.createElement(Form.Field, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }, \" days to submission\"), React.createElement(Form.Input, {\n          name: \"assignment_days\",\n          onChange: this.onNewAssignmentFormChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        })), React.createElement(Form.Button, {\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, \"Create assignment\"))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    };\n\n    this.render = () => {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, this.renderNewAssignmentForm(), React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        width: 10,\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Awards 13 \", React.createElement(Icon, {\n        name: \"star outline\",\n        color: \"yellow\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"handshake outline\",\n        color: \"blue\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"hand peace outline\",\n        color: \"purple\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        width: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Trophies 13\", \" \", React.createElement(Icon, {\n        name: \"graduation cap\",\n        color: \"yellow\",\n        size: \"large\",\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), \"13 \", React.createElement(Icon, {\n        name: \"heart outline\",\n        color: \"olive\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        padded: true,\n        relaxed: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Grid.Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, this.renderAssignments(this.state.assignments))));\n    };\n  }\n\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/shivam/code/kiefer/src/components/Dashboard.js"],"names":["React","Fragment","Axios","Grid","Label","Message","Table","Tab","Icon","Divider","Form","TextArea","Header","Popup","Button","Container","Card","Dashboard","Component","state","assignments","heading","text","doc","dos","componentDidMount","getActiveAssignmentsRequest","then","result","console","log","data","method","url","withCredentials","onNewAssignmentFormChange","e","name","value","setState","createNewAssignment","getCreateAssignmentRequest","assignment_header","assignment_keywords","assignment_days","success","header","keywords","days","params","day","renderAssignment","assignment","marginTop","renderAssignments","map","renderNewAssignmentForm","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Axios from \"axios\";\n\nimport {\n  Grid,\n  Label,\n  Message,\n  Table,\n  Tab,\n  Icon,\n  Divider,\n  Form,\n  TextArea,\n  Header,\n  Popup,\n  Button,\n  Container,\n  Card\n} from \"semantic-ui-react\";\n\nclass Dashboard extends React.Component {\n  state = {\n    assignments: [\n      {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      },\n      {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      },\n      {\n        heading: \"Write about your trip to England\",\n        text: \"\",\n        doc: \"\",\n        dos: \"\"\n      }\n    ]\n  };\n\n  componentDidMount = () => {\n    this.getActiveAssignmentsRequest().then(result => {\n      console.log(result.data);\n      console.log(this.state);\n    });\n  };\n\n  getActiveAssignmentsRequest = () => {\n    return Axios({\n      method: \"get\",\n      url: \"http://127.0.0.1:8000\" + \"/user/assigments\",\n      withCredentials: true\n    });\n  };\n\n  onNewAssignmentFormChange = (e, { name, value }) =>\n    this.setState({ [name]: value });\n\n  createNewAssignment = () => {\n    this.getCreateAssignmentRequest(\n      this.state.assignment_header,\n      this.state.assignment_keywords,\n      this.state.assignment_days\n    ).then(result => {\n      if(result.data.success){\n        console.log(result.data)\n      }\n    })\n  };\n\n  getCreateAssignmentRequest = (header, keywords, days) => {\n    return Axios({\n      method: \"post\",\n      url: \"http://127.0.0.1:8000\" + \"/user/create_assignment\",\n      params: {\n        header: header,\n        keywords: keywords,\n        day: days\n      },\n      withCredentials: true\n    });\n  };\n\n  renderAssignment = assignment => {\n    return (\n      <Grid.Column width={8}>\n        <Card style={{ marginTop: \"16px\" }}>\n          <Card.Content>\n            <Card.Header>{assignment.heading}</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            1 <Icon name=\"star outline\" color=\"yellow\" size=\"large\" />\n            2 <Icon name=\"handshake outline\" color=\"blue\" size=\"large\" />\n            1 <Icon name=\"hand peace outline\" color=\"purple\" size=\"large\" />\n          </Card.Content>\n          <Card.Content extra> Submissions ending in 3 days</Card.Content>\n        </Card>\n      </Grid.Column>\n    );\n  };\n\n  renderAssignments = assignments => {\n    return assignments.map(assignment => this.renderAssignment(assignment));\n  };\n\n  renderNewAssignmentForm = () => {\n    return (\n      <Popup\n        on=\"click\"\n        trigger={\n          <Button floated=\"right\" icon labelPosition=\"right\">\n            {\" \"}\n            <Icon name=\"plus\"></Icon> new assignment\n          </Button>\n        }\n        content={\n          <Form onSubmit={this.createNewAssignment}>\n            <Header> Createw new assignment</Header>\n            <Form.Field>\n              <label>what should the students write about ?</label>\n              <TextArea\n                name=\"assignment_header\"\n                onChange={this.onNewAssignmentFormChange}\n              >\n                {\" \"}\n              </TextArea>\n            </Form.Field>\n            <Form.Group>\n              <Form.Field>\n                <label>give students new words to learn!</label>\n                <Form.Input\n                  name=\"assignment_keywords\"\n                  onChange={this.onNewAssignmentFormChange}\n                ></Form.Input>\n              </Form.Field>\n              <Form.Field>\n                <label> days to submission</label>\n                <Form.Input\n                  name=\"assignment_days\"\n                  onChange={this.onNewAssignmentFormChange}\n                ></Form.Input>\n              </Form.Field>\n              <Form.Button type=\"submit\">Create assignment</Form.Button>\n            </Form.Group>\n          </Form>\n        }\n      ></Popup>\n    );\n  };\n\n  render = () => {\n    return (\n      <Fragment>\n        {this.renderNewAssignmentForm()}\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10} textAlign=\"right\">\n              Awards 13 <Icon name=\"star outline\" color=\"yellow\" size=\"large\" />\n              13 <Icon name=\"handshake outline\" color=\"blue\" size=\"large\" />\n              13 <Icon name=\"hand peace outline\" color=\"purple\" size=\"large\" />\n            </Grid.Column>\n            <Grid.Column width={6}>\n              Trophies 13{\" \"}\n              <Icon\n                name=\"graduation cap\"\n                color=\"yellow\"\n                size=\"large\"\n                textAlign=\"right\"\n              />\n              13 <Icon name=\"heart outline\" color=\"olive\" size=\"large\" />\n            </Grid.Column>\n            <Grid.Column></Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Divider />\n        <Grid padded relaxed>\n          <Grid.Row>{this.renderAssignments(this.state.assignments)}</Grid.Row>\n        </Grid>\n      </Fragment>\n    );\n  };\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}